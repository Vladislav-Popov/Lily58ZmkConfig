/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define LOWER  1
#define RAISE  2
#define NUMPAD 3


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// --------------------------------------------------------------------------------------------------------------
// | ESC / ` |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |   TAB   |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |CAPS/CTRL|  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// |  SHIFT  |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                       | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | DEL   |
			
			label = "QWERTY";
			bindings = <
&mt GRAVE ESC   &kp N1 		&kp N2		&kp N3		&kp N4   	&kp N5             				&kp N6 		&kp N7   	&kp N8    	&kp N9  	&kp N0   	&kp MINUS
&kp TAB   	&kp Q  		&kp W  		&kp E   	&kp R    	&kp T              				&kp Y  		&kp U    	&kp I     	&kp O   	&kp P    	&kp BACKSLASH
&mt LCTL CAPS 	&kp A  		&kp S  		&kp D    	&kp F    	&kp G             				&kp H  		&kp J    	&kp K     	&kp L   	&kp SEMI 	&kp SQT
&kp LSHFT 	&kp Z  		&kp X  		&kp C    	&kp V    	&kp B  		&kp LBKT   	&kp RBKT 	&kp N  		&kp M    	&kp COMMA 	&kp DOT 	&kp FSLH 	&kp RSHFT
                        			&kp LALT 	&kp LGUI 	&mo LOWER	&kp SPACE	&kp RET 	&mo RAISE	&kp BSPC 	&kp DEL
			>;
		};

		lower_layer {
// --------------------------------------------------------------------------------------------------------------
// | BTCLR |  BT1 |  BT2 |  BT3 |      |      |                   |      |       |       |      |       |       |
// |       |      |      |  USB |  BLE |Togle |                   | VOL+ | BRI+  |       |      | PSCRN |       |
// |       |      |      |      |      |      |                   | VOL- | BRI-  |       |      |       |       |
// |       |      |      |      |      |      |        |  |       | MUTE |       |       |      |       |       |
//                       |      |      | PUSH |        |  |       |      |       |       |
			
			label = "LOWER";
			bindings = <
&bt BT_CLR	&bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2	     &&none 	  	&none 	                 	   &none     		&none           &none           &none           &none   	&none
&none     	&none            &none             &out OUT_USB      &out OUT_BLE  	&out OUT_TOG                       &kp C_VOLUME_UP 	&kp C_BRI_UP    &none           &none           &kp PSCRN    	&none
&none     	&none            &none             &none             &none   		&none                    	   &kp C_VOLUME_DOWN 	&kp C_BRI_DN    &none           &none           &none   	&none
&none     	&none            &none             &none             &none       	&none    	&none   &none      &kp C_MUTE    	&none           &none           &none           &none   	&none
                                             	   &trans            &trans       	&trans    	&trans  &trans     &trans    		&trans    	&trans
			>;
		};

		raise_layer {
// --------------------------------------------------------------------------------------------------------------
// |   	   |  F1  |  F2  |  F3  |  F4  |  F5  |                   |  F6   |  F7   |  F8   |  F9  |  F10  |       |
// |       |      |      |      |      |      |                   | PG_UP |       |  UP   |      |       |       |
// |   	   |      |      |      |      |      |                   | PG_DN | LEFT  | DOWN  | RIGHT|       |       |
// |   	   |      |      |      |      |      |   F11  |  |  F12  |   +   |   -   |   =   |      |       | tgNUM |
//                       |      |      |      |        |  |       | PUSH  |       |       |
			
			label = "RAISE";
			bindings = <
&trans 		&kp F1 		&kp F2 		&kp F3  	&kp F4  	&kp F5                      		&kp F6  	&kp F7  	&kp F8  	&kp F9  	&kp F10  	&trans
&none  		&none 		&none  		&none   	&none  		&none                        		&kp PG_UP   	&none   	&kp UP  	&none   	&none   	&none  
&none  		&none 		&none  		&none   	&none  		&none                        		&kp PG_DN   	&kp LEFT 	&kp DOWN 	&kp RIGHT 	&none 		&none 
&none  		&none  		&none  		&none   	&none  		&none      &kp F11    	&kp F12    	&kp KP_PLUS 	&kp MINUS 	&kp EQUAL 	&none  		&none  		&tog NUMPAD
                        			&trans  	&trans 		&trans     &trans   	&trans    	&trans      	&trans    	&trans
			>;
		};
		
		numpad_layer {
// ----------------------------------------------------------------------------------------------------------------
// | ESC / ` |      |      |      |      |      |                   |      |       |       |      |       |   BS  |
// |   TAB   |      |      |      |      |      |                   |  *   |   7   |   8   |   9  |   -   |       |
// |CAPS/CTRL|      |      |      |      |      |                   |  /   |   4   |   5   |   6  |   +   |       |
// |  SHIFT  |      |      |      |      |      |        |  |NUMLOCK|  =   |   1   |   2   |   3  |   .   | tgNUM |
//                         |      |      |      |        |  | ENTER |  0   |   BS  |  DEL  |
			
			label = "NUMPAD";
			bindings = <
&mt GRAVE ESC	&none 		&none  		&none   	&none  		&none                      		&none  		&none 		&none  		&none   	&none  		&kp BSPC
&kp TAB		&none 		&none  		&none   	&none  		&none                        		&kp KP_ASTERISK	&kp KP_N7 	&kp KP_N8 	&kp KP_N9 	&kp KP_MINUS	&none 
&mt LCTL CAPS	&none 		&none  		&none   	&none  		&none                        		&kp KP_SLASH	&kp KP_N4 	&kp KP_N5 	&kp KP_N6 	&kp KP_PLUS  	&none 
&kp LSHFT	&none  		&none  		&none   	&none  		&none      &none    	&kp KP_NLCK    	&kp EQUAL	&kp KP_N1 	&kp KP_N2 	&kp KP_N3 	&kp KP_DOT	&tog NUMPAD
                        			&trans  	&trans 		&trans     &trans   	&kp ENTER    	&kp KP_N0      	&trans    	&trans
			>;

		};
	};
};
